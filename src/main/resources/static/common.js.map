{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/shared/screens/home/home.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { bindNodeCallback, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AccessRequest } from 'src/app/model/AccessRequest';\nimport { Layer } from 'src/app/model/Layer';\nimport { PaginatorDto } from 'src/app/model/PaginatorDto';\nimport { WorkSpaceDto } from 'src/app/model/WorkSpaceDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n  public getLayers(name: string, accessGranted: number, visible: boolean, page: number, size: number): Observable<PaginatorDto> {\n    let params: string = this.buildParams(name, accessGranted, visible, page, size);\n    return this.http.get<PaginatorDto>(`/api/layers?${params}`);\n  }\n\n  private buildParams(name: string, accessGranted: number, visible: boolean, page: number, size: number): string {\n    let params: string = '';\n    if (name !== null && name !== undefined) {\n      params += `name=${name}&`;\n    }\n    if (accessGranted !== null && accessGranted !== undefined) {\n      params += `access_granted=${accessGranted}&`;\n    }\n    if (page !== null && page !== undefined) {\n      params += `page=${page}&`;\n    }\n    if (size !== null && size !== undefined) {\n      params += `size=${size}&`;\n    }\n    if (visible !== null && visible !== undefined) {\n      params += `visible=${visible}&`;\n    }\n    return params;\n  }\n  \n  public getLayer(id: number): Observable<Layer> {\n    return this.http.get<Layer>(`/api/layers/${id}`);\n  }\n\n  public getLayerByName(name: string): Observable<Layer> {\n    return this.http.get<Layer>(`/api/layers/name/${name}`);\n  }\n\n  public saveAccessRequest(accessRequest: AccessRequest): Observable<AccessRequest> {\n    return this.http.post<AccessRequest>('/api/access-request', accessRequest);\n  }\n\n  public getWorkspace(workspaceId: number): Observable<WorkSpaceDto> {\n    return this.http.get<WorkSpaceDto>(`/api/workspaces/${workspaceId}`);\n  }\n\n  public buildTree(workspaces: Array<WorkSpaceDto>): TreeNode[] {\n    return Object.keys(workspaces).reduce<TreeNode[]>((accumulator, key) => {\n      let value = workspaces[key];\n      let node: TreeNode = {};\n      node.label = value.name;\n      node.data = value;\n      node.data.object = \"workspace\";\n      node.leaf = !value.hasChildren;\n      node.data.icon = 'pi pi-fw pi-images';\n      if (value != null) {\n        if (typeof value[\"childrens\"] === \"object\" && value[\"childrens\"].length > 0) {\n          node.children = this.buildTree(value[\"childrens\"]);\n        } else {\n          node.children = [];\n        }\n      }\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  public getWorkspaces(name: string, page: number, size: number) : Observable<PaginatorDto> {\n    let params: string = this.buildWorkspaceParamsFilter(name, page, size);\n    return this.http.get<PaginatorDto>(`/api/workspaces?${params}`);\n  }\n\n  private buildWorkspaceParamsFilter(name: string, page: number, size: number): string {\n    let params: string = '';\n    if (name !== null && name !== undefined) {\n      params += `name=${name}&`;\n    }\n    if (page !== null && page !== undefined) {\n      params += `page=${page}&`;\n    }\n    if (size !== null && size !== undefined) {\n      params += `size=${size}&`;\n    }\n    return params;\n  }\n\n  public verifyAccess(token: string, email: string, layerId: number): Observable<AccessRequest> {\n    const form = new FormData();\n    form.append('accessToken', token);\n    form.append('email', email);\n    form.append('layerId', layerId.toString());\n    return this.http.post<AccessRequest>('/api/access-request/validate-access', form);\n  }\n\n  public getXmlData(fileName: string): Observable<any> {\n    return this.http.get(`/api/files/${fileName}`);\n  }\n  \n}\n"],"names":["HomeService","constructor","http","getLayers","name","accessGranted","visible","page","size","params","buildParams","get","undefined","getLayer","id","getLayerByName","saveAccessRequest","accessRequest","post","getWorkspace","workspaceId","buildTree","workspaces","Object","keys","reduce","accumulator","key","value","node","label","data","object","leaf","hasChildren","icon","length","children","concat","getWorkspaces","buildWorkspaceParamsFilter","verifyAccess","token","email","layerId","form","FormData","append","toString","getXmlData","fileName","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}